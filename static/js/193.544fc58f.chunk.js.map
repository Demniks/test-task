{"version":3,"file":"static/js/193.544fc58f.chunk.js","mappings":"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","sources":["components/Tweet/Tweet.styled.js","redux/usersSelectors.js","components/Tweet/Tweet.jsx","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.jsx","components/Pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-end;\n\n  position: relative;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  font-family: \"Montserrat\", sans-serif;\n  color: #ebd8ff;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2em;\n  text-transform: uppercase;\n\n  & img {\n    position: absolute;\n\n    &.logo {\n      top: 20px;\n      left: 20px;\n    }\n\n    &.pictureBackground {\n      top: 28px;\n      left: 36px;\n    }\n\n    &.userAvatar {\n      top: 178px;\n      left: 150px;\n      border-radius: 50%;\n    }\n\n    &.userLine {\n      top: 214px;\n      left: 0;\n    }\n\n    &.userStroke {\n      top: 178px;\n      left: 150px;\n    }\n  }\n\n  & .tweets {\n    margin-bottom: 16px;\n  }\n\n  & .followers {\n    margin-bottom: 26px;\n  }\n\n  & button {\n    margin-bottom: 36px;\n    padding: 14px 56px;\n\n    background-color: #ebd8ff;\n    border: none;\n    border-radius: 10px;\n\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 1.22em;\n    text-transform: uppercase;\n\n    transition: background-color 250ms ease-in-out;\n\n    &:hover {\n      cursor: pointer;\n      background-color: #5cd3a8;\n    }\n\n    &.followed {\n      padding: 14px 39px;\n      background-color: #5cd3a8;\n\n      &:hover {\n        background-color: #dbcaed;\n      }\n    }\n  }\n`;\n","export const selectUsers = (state) => state.users.users;\nexport const selectLoading = (state) => state.isLoading;\n","import React from \"react\";\nimport userLine from \"../../images/Rectangle.png\";\nimport userLine2x from \"../../images/Rectangle@2x.png\";\nimport userStroke from \"../../images/Ellipse.png\";\nimport userStroke2x from \"../../images/Ellipse@2x.png\";\nimport pictureBackground from \"../../images/pictureBackground.png\";\nimport pictureBackground2x from \"../../images/pictureBackground@2x.png\";\nimport logo from \"../../images/Logo.png\";\nimport logo2x from \"../../images/Logo@2x.png\";\n\nimport { StyledDiv } from \"./Tweet.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUsers } from \"../../redux/usersSelectors\";\nimport { putUsers } from \"../../redux/usersSlice\";\n\nconst TweetComp = ({ user }) => {\n  const users = useSelector(selectUsers);\n  const dispatch = useDispatch();\n\n  const onFollowBtn = () => {\n    const userData = users.filter((updUser) => updUser.id === user.id);\n    const newFollowers = userData[0].followers + 1;\n    const newFollowingStatus = true;\n\n    const userDataToUpd = {\n      id: user.id,\n      followers: newFollowers,\n      isFollowed: newFollowingStatus,\n    };\n\n    dispatch(putUsers(userDataToUpd));\n  };\n\n  const onUnFollowBtn = () => {\n    const userData = users.filter((updUser) => updUser.id === user.id);\n    const newFollowers = userData[0].followers - 1;\n    const newFollowingStatus = false;\n\n    const userDataToUpd = {\n      id: user.id,\n      followers: newFollowers,\n      isFollowed: newFollowingStatus,\n    };\n\n    dispatch(putUsers(userDataToUpd));\n  };\n\n  return (\n    <StyledDiv>\n      <picture>\n        <source srcSet={`${logo} 1x, ${logo2x} 2x`} />\n        <img src={`${logo}`} alt=\"logo goit\" className=\"logo\" />\n      </picture>\n      <picture>\n        <source srcSet={`${pictureBackground} 1x, ${pictureBackground2x} 2x`} />\n        <img\n          src={`${pictureBackground}`}\n          alt=\"pictureBackground\"\n          className=\"pictureBackground\"\n        />\n      </picture>\n      <picture>\n        <source srcSet={`${userLine} 1x, ${userLine2x} 2x`} />\n        <img src={`${userLine}`} alt=\"decorative line\" className=\"userLine\" />\n      </picture>\n      <img\n        src={`${user.avatar}`}\n        alt=\"userAvatar\"\n        width=\"80px\"\n        className=\"userAvatar\"\n      />\n      <picture>\n        <source srcSet={`${userStroke} 1x, ${userStroke2x} 2x`} />\n        <img\n          src={`${userStroke}`}\n          alt=\"decorative line\"\n          className=\"userStroke\"\n        />\n      </picture>\n\n      <p className=\"tweets\">{user.tweets} tweets</p>\n      <p className=\"followers\">\n        {user.followers.toLocaleString(\"en\", { useGrouping: true })} followers\n      </p>\n      {user.isFollowed ? (\n        <button type=\"button\" className=\"followed\" onClick={onUnFollowBtn}>\n          following\n        </button>\n      ) : (\n        <button type=\"button\" onClick={onFollowBtn}>\n          follow\n        </button>\n      )}\n    </StyledDiv>\n  );\n};\n\nexport default TweetComp;\n","import styled from \"styled-components\";\n\nexport const StyledUl = styled.ul`\n  margin-top: 36px;\n  margin-bottom: 36px;\n  display: grid;\n  place-items: center;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 36px;\n`;\n\nexport const StyledBtn = styled.button`\n  margin-bottom: 36px;\n  padding: 14px 56px;\n\n  background-color: #ebd8ff;\n  border: none;\n  border-radius: 10px;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22em;\n  text-transform: uppercase;\n\n  transition: background-color 250ms ease-in-out;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #5cd3a8;\n  }\n`;\n","import React, { useState } from \"react\";\nimport TweetComp from \"../Tweet/Tweet\";\nimport { useSelector } from \"react-redux\";\nimport { selectLoading, selectUsers } from \"../../redux/usersSelectors\";\nimport { StyledBtn, StyledUl } from \"./TweetsList.styled\";\n\nconst TweetsList = () => {\n  const [visible, setVisible] = useState(3);\n\n  const onLoadMoreBtn = () => {\n    setVisible((prevState) => prevState + 3);\n  };\n\n  const users = useSelector(selectUsers);\n  const isLoading = useSelector(selectLoading);\n  return (\n    <>\n      <StyledUl>\n        {!isLoading &&\n          users.length > 0 &&\n          users.slice(0, visible).map((user) => {\n            return (\n              <li key={user.id}>\n                <TweetComp user={user} />\n              </li>\n            );\n          })}\n      </StyledUl>\n      {visible < users.length && (\n        <StyledBtn type=\"button\" onClick={onLoadMoreBtn}>\n          Load more\n        </StyledBtn>\n      )}\n    </>\n  );\n};\n\nexport default TweetsList;\n","import TweetsList from \"components/TweetsList/TweetsList\";\n\nconst HomePage = () => {\n  return (\n    <main>\n      <div>\n        <TweetsList />\n      </div>\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["StyledDiv","styled","_templateObject","_taggedTemplateLiteral","selectUsers","state","users","selectLoading","isLoading","_ref","user","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","srcSet","concat","logo","src","alt","className","pictureBackground","pictureBackground2x","userLine","avatar","width","userStroke","userStroke2x","tweets","followers","toLocaleString","useGrouping","isFollowed","type","onClick","newFollowers","filter","updUser","id","userDataToUpd","putUsers","StyledUl","StyledBtn","_templateObject2","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_Fragment","length","slice","map","TweetComp","prevState","TweetsList"],"sourceRoot":""}